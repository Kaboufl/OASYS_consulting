name: Deployer OASYS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  create-deployment-artifacts:
    name: Creer des artefacts de deploiement
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Compiler les CSS et JS
      run: |
        npm install
        npm run build

    - name: Configurer PHP 8.2
      uses: shivammathur/setup-php@master
      with:
        php-version: 8.2
        extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

    - name: Composer install
      run: |
        composer install --no-dev --no-interaction --prefer-dist

    - name: Creer un artefact de deploiement
      run: tar -czf app.tar.gz --exclude=*.git --exclude=node_modules --exclude=tests * && ls -la

    - name: Nettoyage des fichiers dans le serveur
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        script: |
          cd /var/www/oasys
          shopt -s extglob
          rm -rf !(storage|certs|.env)
    
    - name: Upload l'artefact de deploiement
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        source: "./app.tar.gz"
        target: "/var/www/oasys"

    - name: Finalisation du deploiement
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        script: |
          cd /var/www/oasys
          tar -xzf app.tar.gz
          rm app.tar.gz
          
